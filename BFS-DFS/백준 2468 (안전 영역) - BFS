import sys
from collections import deque
import copy

N = int(sys.stdin.readline())

MAP = []
for _ in range(N):
    MAP.append(list(map(int, sys.stdin.readline().rstrip().split(" "))))

max_height = 0
for i in range(N):
    for j in range(N):
        if max_height < MAP[i][j]:
            max_height = MAP[i][j]

dirX = [0, 0, -1, 1]       # 상하좌우
dirY = [-1, 1, 0, 0]


def BFS(tmp_map, i, j):
    Q = deque([[i, j]])
    while len(Q) != 0:
        x, y = Q.popleft()
        for i in range(4):
            X = x + dirY[i]
            Y = y + dirX[i]
            if 0 <= X < N and 0 <= Y < N:
                if tmp_map[X][Y] > 0:
                    Q.append([X, Y])
                    tmp_map[X][Y] = -1


answer = 0

# 물에 잠기지 않을 수도 있으니 안올때부터
# 가장 높은 건물이 잠길 때까지 전부 확인
for height in range(max_height+1):
    tmp_map = copy.deepcopy(MAP)

    for i in range(N):
        for j in range(N):
            if tmp_map[i][j] < height:
                tmp_map[i][j] = 0

    tmp_answer = 0
    for i in range(N):
        for j in range(N):
            if tmp_map[i][j] > 0:
                BFS(tmp_map, i, j)
                tmp_answer += 1

    if answer < tmp_answer:
        answer = tmp_answer

print(answer)
